<?xml version="1.0"?>
<project name="jSCAF-ant-build" default="jscaf.build" basedir=".">


     <!--
     @version 1.4.1 - 14.11.2014 - for jSCAF 1.9.x
     @author : ROELS GrÃ©gory - DIGIT.B.1

     BIG FONTS generated by : http://patorjk.com/software/taag/#p=display&h=1&v=1&f=Colossal&t=CORE-INIT
     -->



    <!--======================================================================-->
    <!--                     IMPORT PROPERTIES & DEFINITIONS                  -->
    <!--======================================================================-->

    <property file="build.app.properties"/>
    <property file="build.properties"/>
    <import file="build.definitions.xml" description="Loads properties, definitions and macrodefs"/>




    <!--======================================================================-->
    <!--                     COMMON CHECK AND OUTPUT PARAMETERS               -->
    <!--======================================================================-->

    <target name="-check.parameters">
        <fail unless="app.group.id">app.group.id NOT DEFINED in /build/build.app.properties file !!!! </fail>
        <fail unless="app.name">app.name NOT DEFINED in /build/build.app.properties file !!!! </fail>
        <fail unless="app.name.display">app.name.display NOT DEFINED in /build/build.app.properties file !!!! </fail>
        <fail unless="app.version">app.version NOT DEFINED in /build/build.app.properties file !!!! </fail>
        <fail unless="app.build.number">app.build.number NOT DEFINED in /build/build.app.properties file !!!! </fail>
        <fail unless="app.js.file">app.js.file NOT DEFINED in /build/build.app.properties file !!!! </fail>
        <fail unless="app.css.file">app.css.file NOT DEFINED in /build/build.app.properties file !!!! </fail>
        <fail unless="svn.jscaf.local.dir">svn.jscaf.local.dir NOT DEFINED in /build/build.app.properties file !!!! </fail>
    </target>


    <target name="-echo.parameters">
<!--        
        <echo></echo>
        <echo>==================================</echo>
        <echo>jSCAF VERSION _______________ ${jscaf.version}</echo>
        <echo>==================================</echo>
        <echo></echo>

        <echo>APP NAME _______________ ${app.name}</echo>
        <echo>APP NAME DISPLAY _______ ${app.name.display}</echo>
        <echo>APPLICATION VERSION ____ ${app.version}</echo>
        <echo>BUILD NUMBER ___________ ${app.build.number}</echo>
        
        <echo></echo>
        <echo>APP TARGET DIR : ${app.target.dir}</echo>
        <echo></echo>

        <echo>===========================</echo>
        <echo>APP SOURCE BUILD PARAMETERS</echo>
        <echo>===========================</echo>
        <echo>APP DEVELOPMENT BUILD : ${app.development.build}</echo>
        <echo>APP BUILD PROCESS : ${app.build.process}</echo>
        <echo>APP COMPRESS JSP : ${app.compress.jsp}</echo>
        <echo>APP MINIFY JS CSS : ${app.minify.js.css}</echo>

-->
    </target>






    <!--======================================================================-->
    <!--                     SET CONDITIONS                                   -->
    <!--======================================================================-->

    <condition property="do_app_init">
        <istrue value="${app.init}"/>
    </condition>

    <condition property="do_svn_update">
        <istrue value="${jscaf.svn.update}"/>
    </condition>

    <condition property="do_regenerate_jscaf_target">
        <istrue value="${jscaf.regenerate.target}"/>
    </condition>

    <condition property="do_js_lint">
        <istrue value="${jscaf.common.generate.js.lint}"/>
    </condition>

    <condition property="do_generate_jsdoc">
        <istrue value="${jscaf.common.generate.js.doc}"/>
    </condition>

    <condition property="do_minify_plugins">
        <istrue value="${jscaf.common.generate.minify.plugins}"/>
    </condition>

    <condition property="do_app_development_build">
        <istrue value="${app.development.build}"/>
    </condition>

    <condition property="not_app_development_build">
        <isfalse value="${app.development.build}"/>
    </condition>

    <condition property="do_app_minify_js_css">
        <istrue value="${app.minify.js.css}"/>
    </condition>


    <condition property="do_app_compress_jsp">
        <istrue value="${app.compress.jsp}"/>
    </condition>

    <condition property="do_app_build_process">
        <istrue value="${app.build.process}"/>
    </condition>

    <condition property="do_app_use_war_overlay">
        <istrue value="${app.use.war.overlay}"/>
    </condition>

    <condition property="do_app_maven_build">
        <istrue value="${app.maven.build}"/>
    </condition>





    <!--======================================================================-->
    <!--                     TOKEN FILTERS                                    -->
    <!--======================================================================-->

    <!--transferred as parameters for the current build-->
    <filter token="jscaf.version" value="${jscaf.version}"/>
    <filter token="app.version" value="${app.version}"/>
    <filter token="app.development.build" value="${app.development.build}"/>
    <filter token="build.number" value="${app.build.number}"/>
    <filter token="build.date" value="${_timestamp.display}"/>
                                                                                    
    <!--timestamps replacement-->
    <filter token="build.timestamp" value="${_timestamp}"/>
    <filter token="build.timestamp.full" value="${_timestamp}"/>
    
    <filter token="main.css" value="main${pagescript.timestamp}.build.css"/>
    <filter token="main.bootstrap.css" value="main.bootstrap${pagescript.timestamp}.build.css"/>
    <filter token="main.bootstrap.only.css" value="main.bootstrap.only${pagescript.timestamp}.build.css"/>    
    <filter token="main.print.css" value="main.print${pagescript.timestamp}.build.css"/>
    <filter token="main.print.bootstrap.css" value="main.print.bootstrap${pagescript.timestamp}.build.css"/>
    <filter token="main.print.bootstrap.only.css" value="main.print.bootstrap.only${pagescript.timestamp}.build.css"/>    
    <filter token="main.spa.css" value="main.spa${pagescript.timestamp}.build.css"/>
    
    <filter token="main.js" value="main${pagescript.timestamp}.build.js"/>
    <filter token="main.full.js" value="main.full${pagescript.timestamp}.build.js"/>
    <filter token="main.flat.full.js" value="main.flat.full${pagescript.timestamp}.build.js"/>
    <filter token="main.bootstrap.full.js" value="main.bootstrap.full${pagescript.timestamp}.build.js"/>
    <filter token="main.spa.full.js" value="main.spa.full${pagescript.timestamp}.build.js"/>
    
    <filter token="require.js" value="require${pagescript.timestamp}.js"/>
    
    <!--jSCAF plugins-->
    <filter token="plugin.JSinlineEdit.js" value="JSinlineEdit${pagescript.timestamp}.js"/>

    <!--jSCAF modules only-->
    <filter token="mod.ajax.js" value="ajax${pagescript.timestamp}.js"/>
    <filter token="mod.browser.js" value="browser${pagescript.timestamp}.js"/>
    <filter token="mod.components.js" value="components${pagescript.timestamp}.js"/>
    <filter token="mod.core.js" value="core${pagescript.timestamp}.js"/>
    <filter token="mod.display.js" value="display${pagescript.timestamp}.js"/>
    <filter token="mod.init.js" value="init${pagescript.timestamp}.js"/>
    <filter token="mod.main.js" value="main${pagescript.timestamp}.js"/>
    <filter token="mod.resources.js" value="resources${pagescript.timestamp}.js"/>
    <filter token="mod.spa-init.js" value="spa-init${pagescript.timestamp}.js"/>
    <filter token="mod.spa.js" value="spa${pagescript.timestamp}.js"/>
    <filter token="mod.ui-dialog.js" value="ui-dialog${pagescript.timestamp}.js"/>
    <filter token="mod.utils.js" value="utils${pagescript.timestamp}.js"/>
    <filter token="mod.validation.js" value="validation${pagescript.timestamp}.js"/>


    <!--application files replacement-->
    <filter token="app.name" value="${app.name}"/>
    <filter token="app.name.display" value="${app.name.display}"/>
    <filter token="app.group.id" value="${app.group.id}"/>
    <filter token="app.controller" value="${app.controller}"/>
    <filter token="app.js.file" value="${app.js.file}"/>
    <filter token="app.css.file" value="${app.css.file}"/>


    <filter token="app.init.project.dir" value="${app.init.project.dir}"/>

    <filter token="jscaf.home.dir" value="${jscaf.home.dir}"/>
    




    

    <!--======================================================================-->
    <!--                     DYNAMIC VARIABLES                                -->
    <!--======================================================================-->

    <!--pagescript depending on development mode-->
    <var name="pagescript.timestamp" value=""/>
    <var name="pagescript.timestamp.dev" value=""/>

    <if>
        <istrue value="${app.development.build}"/>
        <then>
            <var name="pagescript.timestamp" value=""/>
            <var name="pagescript.timestamp.dev" value="v=${_timestamp}"/>
        </then>
        <else>
            <var name="pagescript.timestamp" value="-min_${_timestamp}"/>
            <var name="pagescript.timestamp.dev" value=""/>
        </else>
    </if>

    <filter token="pagescript.timestamp" value="${pagescript.timestamp}"/>
    <filter token="pagescript.timestamp.dev" value="${pagescript.timestamp.dev}"/>    



    <!--application init server mvc selection-->
    <if>
        <equals arg1="${app.init.server.mvc}" arg2="struts"/>
        <then>
            <var name="tiles.uri" value="http://struts.apache.org/tags-tiles"/>
            <var name="tiles.insert.attribute" value="insert attribute"/>
            <var name="do_app_init_struts" value="true"/>
            <var name="do_maven_build" value="true"/>
            <var name="jsp.contents.root" value="/jsp"/>
        </then>
        <else>
            <var name="tiles.uri" value="http://tiles.apache.org/tags-tiles"/>
            <var name="tiles.insert.attribute" value="insertAttribute name"/>
            <var name="do_ant_build" value="true"/>
            <var name="jsp.contents.root" value="/WEB-INF/jsp/contents"/>
            <var name="do_app_init_springmvc" value="true"/>
            <var name="app.init.server.mvc" value="springMVC"/>
        </else>
    </if>

    <filter token="tiles.uri" value="${tiles.uri}"/>
    <filter token="tiles.insert.attribute" value="${tiles.insert.attribute}"/>
    <filter token="jsp.contents.root" value="${jsp.contents.root}"/>
    <filter token="jscaf.version" value="${jscaf.version}"/>
    <filter token="app.server.autodeploy.dir" value="${app.server.autodeploy.dir}"/>



    <!--settings application target according the build type : default (ant->ant) OR maven with overlay (maven->ant) -->

    <if>
        <istrue value="${app.use.war.overlay}"/>
        <then>
            <var name="do_maven_app_build" value="true"/>
            <var name="app.target.dir" value="${app.target.maven.dir}"/>
            <var name="app.target.web-inf.dir" value="${app.target.maven.web-inf.dir}"/>
            <var name="app.target.jsp.dir" value="${app.target.maven.jsp.dir}"/>
            <var name="app.target.tiles.dir" value="${app.target.maven.tiles.dir}"/>
            <var name="app.target.scripts.dir" value="${app.target.maven.scripts.dir}"/>
            <var name="app.target.styles.dir" value="${app.target.maven.styles.dir}"/>
            <var name="app.target.pages.dir" value="${app.target.maven.pages.dir}"/>
        </then>
        <else>
            <var name="app.target.dir" value="${app.target.dir}"/>
            <var name="app.target.web-inf.dir" value="${app.target.web-inf.dir}"/>
            <var name="app.target.jsp.dir" value="${app.target.jsp.dir}"/>
            <var name="app.target.tiles.dir" value="${app.target.tiles.dir}"/>
            <var name="app.target.scripts.dir" value="${app.target.scripts.dir}"/>
            <var name="app.target.styles.dir" value="${app.target.styles.dir}"/>
            <var name="app.target.pages.dir" value="${app.target.pages.dir}"/>
        </else>
    </if>



























<!--
   d8b  .d8888b.   .d8888b.         d8888 8888888888       888888b.   888     888 8888888 888      8888888b.  
   Y8P d88P  Y88b d88P  Y88b       d88888 888              888  "88b  888     888   888   888      888  "Y88b 
       Y88b.      888    888      d88P888 888              888  .88P  888     888   888   888      888    888 
  8888  "Y888b.   888            d88P 888 8888888          8888888K.  888     888   888   888      888    888 
  "888     "Y88b. 888           d88P  888 888              888  "Y88b 888     888   888   888      888    888 
   888       "888 888    888   d88P   888 888       888888 888    888 888     888   888   888      888    888 
   888 Y88b  d88P Y88b  d88P  d8888888888 888              888   d88P Y88b. .d88P   888   888      888  .d88P 
   888  "Y8888P"   "Y8888P"  d88P     888 888              8888888P"   "Y88888P"  8888888 88888888 8888888P"  
   888                                                                                                        
  d88P                                                                                                        
888P"               

-->


    <!--======================================================================-->
    <!--                     JSDOC GENERATION                                 -->
    <!--======================================================================-->
    <target name="-jscaf.generate.jsdoc">

        <concat destfile="${jscaf.target.dir}/scripts/jscaf.modules.js" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.src.scripts.dir}/jscaf/modules">
                <file name="core.js"/>
                <file name="components.js"/>
                <file name="ajax.js"/>
                <file name="ui-dialog.js"/>
                <file name="utils.js"/>
                <file name="browser.js"/>
                <file name="validation.js"/>
            </filelist>
        </concat>

        <sequential>
            <echo>${jscaf.site.jsdoc.dir}</echo>
            <delete failonerror="false" includeEmptyDirs="true">
                <fileset dir="${jscaf.site.jsdoc.dir}/symbols"/>
            </delete>            

            <exec executable="java" dir=".">
                <arg line="-jar ${jscaf.build.lib.jsdoc.dir}/jsrun.jar ${jscaf.build.lib.jsdoc.dir}/app/run.js"/>

                <arg line="-A"/>
                <arg line="-d=${jscaf.site.jsdoc.dir}"/>
                <arg line="-D=noGlobal:true"/>
                <arg line="-D=title:jSCAF"/>

                <!-- use the default template -->
                <arg line="-t=${jscaf.build.lib.jsdoc.dir}/templates/codeview"/>

                <!-- Create an arg element for each file you want to include in the documentation -->
                <arg line="${jscaf.target.dir}/scripts/jscaf.modules.js"/>
            </exec>
        </sequential>

        <!--removing unecessary files-->
        <delete file="${jscaf.site.jsdoc.dir}/files.html"/>
        <delete file="${jscaf.site.jsdoc.dir}/glslIndex.html"/>
        <delete file="${jscaf.site.jsdoc.dir}/jsIndex.html"/>
    </target>





    <!--======================================================================-->
    <!--                     MAIN PACKAGE                                     -->
    <!--======================================================================-->

    <target name="jscaf.build"
            depends="-check.parameters,
                     -echo.parameters,
                     -jscaf.build.process,
                     -app.build.process"/>


    <!--======================================================================-->
    <!--                 jSCAF BUILD PROCESS                                  -->
    <!--======================================================================-->

    <target name="-jscaf.build.process" if="do_regenerate_jscaf_target" depends="-echo.parameters">

        <echo></echo>
        <echo>***************************************************************************</echo>
        <echo>************ jSCAF BUILD PROCESS ******************************************</echo>
        <echo>***************************************************************************</echo>
        <echo></echo>
        
        <!--   --> 
        <antcall target="-check.parameters"/>

        <antcall target="-hint.lint.jscaf.js"/>
        <antcall target="-clean.target"/>
        <antcall target="-copy.to.target"/>

        <antcall target="-compile.less"/>
        <antcall target="-replace.sprites"/>

        <antcall target="-make.main.target.js.css"/>
        <antcall target="-minify.plugins.js.css"/>

        <antcall target="-clean.target.sources"/>

        <antcall target="-copy.generated.target"/>

    </target>




    <!--======================================================================-->
    <!--                     HINT/LINT COMMON.JS                              -->
    <!--======================================================================-->

    <target name="-hint.lint.jscaf.js" if="do_js_lint">
        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/ajax.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/ajax.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/browser.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/browser.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/core.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/core.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/components.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/components.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/display.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/display.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/init.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/init.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/main.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/main.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/resources.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/resources.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/spa-init.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/spa-init.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/spa.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/spa.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/ui-dialog.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/ui-dialog.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/utils.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/utils.js"/>

        <hintjs input="${jscaf.src.scripts.dir}/jscaf/modules/validation.js"/>
        <lintjs input="${jscaf.src.scripts.dir}/jscaf/modules/validation.js"/>

    </target>






    <!--======================================================================-->
    <!--                     CLEAN JSCAF TARGET                               -->
    <!--======================================================================-->

    <target name="-clean.target">
        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="${jscaf.target.dir}"/>
        </delete>
    </target>



    <!--======================================================================-->
    <!--                     FEEDING TARGET with sources                      -->
    <!--======================================================================-->

    <target name="-copy.to.target">

        <copy todir="${jscaf.target.dir}/tiles">
            <fileset dir="${jscaf.src.tiles.dir}"/>
        </copy>

        <copy todir="${jscaf.target.dir}/scripts">
            <fileset dir="${jscaf.src.scripts.dir}"/>
        </copy>

        <copy todir="${jscaf.target.dir}/styles">
            <fileset dir="${jscaf.src.styles.dir}"/>
        </copy>

        <copy todir="${jscaf.target.dir}/plugins">
            <fileset dir="${jscaf.src.plugins.dir}"/>
        </copy>        

        <copy todir="${jscaf.target.dir}/themes">
            <fileset dir="${jscaf.src.themes.dir}"/>
        </copy>            

        <copy todir="${jscaf.target.dir}/jsp">
            <fileset dir="${jscaf.src.jsp.dir}" excludes="home"/>
        </copy>

        <copy todir="${jscaf.target.dir}/pages">
            <fileset dir="${jscaf.src.pages.dir}"/>
        </copy>

        <copy todir="${jscaf.target.dir}/WEB-INF">
            <fileset dir="${jscaf.src.web-inf.dir}"/>
        </copy>

    </target>





    <!--======================================================================-->
    <!--                        LESS PROCESSING                               -->
    <!--======================================================================-->

    <target name="-compile.less">

        <copy tofile="font_common.less"
              file="${jscaf.target.dir}/styles/less/font_common.less" overwrite="true">
        </copy>

        <echo message="Processing LESS CSS (FONT DEFAULT)..."/>
        <lessjs input="${jscaf.target.dir}/styles/less/font_default.less"
                output="${jscaf.target.dir}/styles/font_default.css"/>
        <lessjs input="${jscaf.target.dir}/styles/less/font_min.less"
                output="${jscaf.target.dir}/styles/font_min.css"/>
        <lessjs input="${jscaf.target.dir}/styles/less/font_max.less"
                output="${jscaf.target.dir}/styles/font_max.css"/>

        <replace file="${jscaf.target.dir}/styles/font_default.css"
                 token=".font-class"
                 value=""/>
        <replace file="${jscaf.target.dir}/styles/font_max.css"
                 token=".font-class"
                 value=".font_max"/>
        <replace file="${jscaf.target.dir}/styles/font_min.css"
                 token=".font-class"
                 value=".font_min"/>

        <delete>
            <fileset dir="${basedir}" includes="*.less"/>
        </delete>
    </target>




    <!-- TO BE EXECUTED ONLY IF SPRITES HAS BEEN UPDATED
    rename common sprites to force re-caching if the files changed for this release -->
    <target name="-replace.sprites">

        <copy tofile="${jscaf.target.dir}/styles/images/_sprites/_common_sprite_16x16-${_timestamp}.png"
              file="${jscaf.target.dir}/styles/images/_sprites/_common_sprite_16x16.png" overwrite="true">
        </copy>

        <replace file="${jscaf.target.dir}/styles/common16.css"
                 token="_common_sprite_16x16.png"
                 value="_common_sprite_16x16-${_timestamp}.png"/>

    </target>
    



    <!--======================================================================-->
    <!--                        JS CSS CONCATENATION FOR PROD RELEASES        -->
    <!--======================================================================-->

    <target name="-make.main.target.js.css">

        <!--compress jQuery by default for each distribution-->
        <foreach param="file" target="yui">
            <fileset dir="${jscaf.target.dir}/scripts" includes="jquery.js"/>
        </foreach>

        <!--generating the main concatenated files-->
        <concat destfile="${jscaf.target.dir}/scripts/main${pagescript.timestamp}.build.js" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}/scripts">
                <file name="jquery.js"/>
                <file name="core.js"/>
            </filelist>
        </concat>

        <!--all scripts together : main + jscal bundle-->
        <concat destfile="${jscaf.target.dir}/scripts/main.full${pagescript.timestamp}.build.js" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}/scripts">
                <file name="jquery.js"/>
                <file name="bootstrap.light.js"/>
                <file name="core.js"/>
                <file name="jscaf/modules/ajax.js"/>
                <file name="jscaf/modules/browser.js"/>
                <file name="jscaf/modules/core.js"/>
                <file name="jscaf/modules/utils.js"/>
                <file name="jscaf/modules/components.js"/>
                <file name="jscaf/modules/display.js"/>
                <file name="jscaf/modules/init.js"/>
                <file name="jscaf/modules/ui-dialog.js"/>
                <file name="jscaf/modules/validation.js"/>
                <file name="jscaf/modules/resources.js"/>
                <file name="jscaf/modules/main.js"/>
            </filelist>
        </concat>


        <!--all scripts together : main + jscal bundle-->
        <concat destfile="${jscaf.target.dir}/scripts/main.bootstrap.full${pagescript.timestamp}.build.js" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}/scripts">
                <file name="jquery.js"/>
                <file name="bootstrap.full.js"/>
                <file name="core.js"/>
                <file name="jscaf/modules/ajax.js"/>
                <file name="jscaf/modules/components.js"/>
                <file name="jscaf/modules/validation.js"/>
                <file name="jscaf/modules/ui-dialog.js"/>
                <file name="jscaf/modules/core.js"/>
                <file name="jscaf/modules/utils.js"/>
                <file name="jscaf/modules/resources.js"/>
                <file name="jscaf/modules/init.js"/>
                <file name="jscaf/modules/main.js"/>
            </filelist>
        </concat>



        <!--all scripts together : main + jscal bundle-->
        <concat destfile="${jscaf.target.dir}/scripts/main.spa.full${pagescript.timestamp}.build.js" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}">
                <file name="scripts/jquery.js"/>
                <file name="scripts/core.js"/>
                <file name="scripts/jscaf/modules/ajax.js"/>
                <file name="scripts/jscaf/modules/browser.js"/>
                <file name="scripts/jscaf/modules/core.js"/>
                <file name="scripts/jscaf/modules/utils.js"/>
                <file name="scripts/jscaf/modules/components.js"/>
                <file name="scripts/jscaf/modules/display.js"/>
                <file name="scripts/jscaf/modules/spa-init.js"/>
                <file name="scripts/jscaf/modules/spa.js"/>
                <file name="scripts/jscaf/modules/ui-dialog.js"/>
                <file name="scripts/jscaf/modules/validation.js"/>
                <file name="scripts/jscaf/modules/resources.js"/>
                <file name="scripts/jscaf/modules/main.js"/>
            </filelist>
        </concat>


        <concat destfile="${jscaf.target.dir}/styles/main${pagescript.timestamp}.build.css" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}/styles">
                <file name="reset.css"/>
                <file name="fonts.css"/>
                <file name="jquery.ui.css"/>
                <file name="bootstrap/bootstrap.css"/>
                <file name="font_default.css"/>
                <file name="font_min.css"/>
                <file name="font_max.css"/>
                <file name="icon-fonts.css"/>
                <file name="common16.css"/>        
            </filelist>
        </concat>

        <concat destfile="${jscaf.target.dir}/styles/main.flat${pagescript.timestamp}.build.css" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}/styles">
                <file name="reset.css"/>
                <file name="fonts.css"/>
                <file name="jquery.ui.css"/>
                <file name="bootstrap/bootstrap.css"/>
                <file name="font_default.css"/>
                <file name="font_min.css"/>
                <file name="font_max.css"/>
                <file name="icon-fonts.css"/>
                <file name="common16.css"/>        
            </filelist>
        </concat>        

        <concat destfile="${jscaf.target.dir}/styles/main.bootstrap${pagescript.timestamp}.build.css" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}/styles">
                <file name="bootstrap/bootstrap.full.css"/>
                <file name="reset.css"/>
                <file name="fonts.css"/>
                <file name="icon-fonts.css"/>
                <file name="font_default.css"/>
                <file name="jquery.ui.css"/>    
                <file name="common16.css"/>
            </filelist>
        </concat>

        <concat destfile="${jscaf.target.dir}/styles/main.bootstrap.only${pagescript.timestamp}.build.css" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}/styles">
                <file name="bootstrap/bootstrap.full.css"/>
                <file name="jquery.ui.css"/>    
                <file name="common.light.css"/>
            </filelist>
        </concat>        

        <concat destfile="${jscaf.target.dir}/styles/main.flat.bootstrap${pagescript.timestamp}.build.css" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}">
                <file name="styles/bootstrap/bootstrap.full.css"/>
                <file name="styles/reset.css"/>
                <file name="styles/fonts.css"/>
                <file name="styles/icon-fonts.css"/>
                <file name="styles/font_default.css"/>
                <file name="styles/jquery.ui.css"/>    
                <file name="styles/common16.css"/>
                <file name="themes/flat-sysper/flat.css"/>
            </filelist>
        </concat>



        <concat destfile="${jscaf.target.dir}/styles/main.spa${pagescript.timestamp}.build.css" encoding="UTF-8"
                outputencoding="UTF-8"
                fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}">
                <file name="styles/reset.css"/>
                <file name="styles/fonts.css"/>
                <file name="styles/jquery.ui.css"/>
                <file name="styles/bootstrap/bootstrap.css"/>
                <file name="styles/font_default.css"/>
                <file name="styles/font_min.css"/>
                <file name="styles/font_max.css"/>
                <file name="styles/icon-fonts.css"/>
                <file name="styles/common16.css"/>        
                <file name="themes/spa/spa.css"/>                
            </filelist>
        </concat>

        <concat destfile="${jscaf.target.dir}/styles/main.print${pagescript.timestamp}.build.css"
                encoding="UTF-8"
                outputencoding="UTF-8" fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}/styles">
                <file name="reset.css"/>
                <file name="jquery.ui.css"/>
                <file name="font_default.css"/>
                <file name="print.css"/>
            </filelist>
        </concat>

        <concat destfile="${jscaf.target.dir}/styles/main.print.bootstrap${pagescript.timestamp}.build.css"
                encoding="UTF-8"
                outputencoding="UTF-8" fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}/styles">
                <file name="bootstrap/bootstrap.full.css"/>
                <file name="reset.css"/>
                <file name="jquery.ui.css"/>                
                <file name="font_default.css"/>
                <file name="print.css"/>
            </filelist>
        </concat>

        <concat destfile="${jscaf.target.dir}/styles/main.print.bootstrap.only${pagescript.timestamp}.build.css"
                encoding="UTF-8"
                outputencoding="UTF-8" fixlastline="true">
            <filelist id="filelist" dir="${jscaf.target.dir}/styles">
                <file name="bootstrap/bootstrap.full.css"/>
                <file name="jquery.ui.css"/>                
            </filelist>
        </concat>

    </target>







    <target name="-minify.plugins.js.css" if="do_minify_plugins">

        <!--PRE-MINIFYING PLUGINS SCRIPTS -->
        <foreach param="file" target="yui">
            <fileset dir="${jscaf.target.dir}/plugins" includes="**/*.js">
                <exclude name="**/dev/**"/>
            </fileset>
        </foreach>

        <!--PRE-MINIFYING PLUGINS CSS -->
        <foreach param="file" target="yui">
            <fileset dir="${jscaf.target.dir}/plugins" includes="**/*.css">
                <exclude name="**/dev/**"/>
            </fileset>                
        </foreach>


    </target>







    <!--=============================================================================================================-->
    <!--                      TARGET CLEAN SOURCES NOT USEFULL FOR RELEASE                                           -->
    <!--=============================================================================================================-->

    <target name="-clean.target.sources">
        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="${jscaf.target.dir}/styles/less"/>
            <fileset dir="${jscaf.target.dir}/styles/images/_assmal2"/>
            <fileset dir="${jscaf.target.dir}/styles/images/_mips2"/>
            <fileset dir="${jscaf.target.dir}/styles/images/_sysper2"/>
            <fileset dir="${jscaf.target.dir}/styles/images/__ec"/>
            <fileset dir="${jscaf.target.dir}/styles/images/_app"/>
        </delete>

    </target>





    <target name="-copy.generated.target">

        <delete>
           <fileset dir="${jscaf.generated.target.dir}">
              <include name="**/*"/>
           </fileset>
        </delete>

        <delete includeemptydirs="false">
          <fileset dir="${jscaf.generated.target.dir}"/>
        </delete>        

        <copy todir="${jscaf.generated.target.dir}" overwrite="true">
            <fileset dir="${jscaf.target.dir}"/>
        </copy>
    </target>
















































<!--
                                                                                                                                                                                          
                                                                                                                                                                                          
                                                                                                
       d8888 8888888b.  8888888b.        888888b.   888     888 8888888 888      8888888b.  
      d88888 888   Y88b 888   Y88b       888  "88b  888     888   888   888      888  "Y88b 
     d88P888 888    888 888    888       888  .88P  888     888   888   888      888    888 
    d88P 888 888   d88P 888   d88P       8888888K.  888     888   888   888      888    888 
   d88P  888 8888888P"  8888888P"        888  "Y88b 888     888   888   888      888    888 
  d88P   888 888        888       888888 888    888 888     888   888   888      888    888 
 d8888888888 888        888              888   d88P Y88b. .d88P   888   888      888  .d88P 
d88P     888 888        888              8888888P"   "Y88888P"  8888888 88888888 8888888P"  
                                                                                              


-->





    <!--======================================================================-->
    <!--                 APPLICATION BUILD PROCESS                            -->
    <!--======================================================================-->

    <target name="-app.build.process" if="do_app_build_process" depends="-echo.parameters">

        <echo></echo>        
        <echo>***************************************************************************</echo>
        <echo>************ jSCAF APPLICATION BUILD PROCESS ******************************</echo>
        <echo>***************************************************************************</echo>
        <echo></echo>

        <antcall target="-copy.target.to.app"/>
        <antcall target="-app.replace.web-inf"/>
        <antcall target="-app.replace.jsp"/>
        <antcall target="-app.move.min.js.css"/>
        <antcall target="-app.move.min.js.css.maven"/>
        <antcall target="-app.clean"/>
        <antcall target="-app.remove.js.logs"/>
        <antcall target="-app.minify.js.css"/>
        <antcall target="-app.compress.jsp"/>
        <antcall target="-app.clean.final"/>

    </target>



    <!--======================================================================-->
    <!--                     COPY jSCAF TARGET TO APP TARGET                  -->
    <!--======================================================================-->

    <target name="-copy.target.to.app" unless="do_app_use_war_overlay">

        <mkdir dir="${app.target.scripts.dir}"/>

        <touch>
            <fileset dir="${app.target.scripts.dir}"/>
        </touch>
        <copy todir="${app.target.scripts.dir}" overwrite="false">
            <fileset dir="${jscaf.target.dir}/scripts"/>
        </copy>

        <mkdir dir="${app.target.styles.dir}"/>
        <touch>
            <fileset dir="${app.target.styles.dir}"/>
        </touch>
        <copy todir="${app.target.styles.dir}" overwrite="false">
            <fileset dir="${jscaf.target.dir}/styles"/>
        </copy>

        <mkdir dir="${app.target.tiles.dir}"/>
        <touch>
            <fileset dir="${app.target.tiles.dir}"/>
        </touch>
        <copy todir="${app.target.tiles.dir}" overwrite="false">
            <fileset dir="${jscaf.target.dir}/tiles"/>
        </copy>

        <mkdir dir="${app.target.jsp.dir}"/>
        <touch>
            <fileset dir="${app.target.jsp.dir}"/>
        </touch>
        <copy todir="${app.target.jsp.dir}" overwrite="false">
            <fileset dir="${jscaf.target.dir}/jsp">
                <exclude name="home/**"/>
            </fileset>
        </copy>

        <mkdir dir="${app.target.pages.dir}"/>
        <touch>
            <fileset dir="${app.target.pages.dir}"/>
        </touch>
        <copy todir="${app.target.pages.dir}" overwrite="false">
            <fileset dir="${jscaf.target.dir}/pages"/>
        </copy>

        <mkdir dir="${app.target.web-inf.dir}"/>
        <touch>
            <fileset dir="${app.target.web-inf.dir}"/>
        </touch>
        <copy todir="${app.target.web-inf.dir}" overwrite="false">
            <fileset dir="${jscaf.target.dir}/WEB-INF">
                 <exclude name="template-*"/>
                 <exclude name="**/*servlet*"/>
            </fileset>
        </copy>

    </target>





    <!--======================================================================-->
    <!--           APP TOKENS PARAMETERS AND TIMESTAMPS REPLACEMENT           -->
    <!--======================================================================-->

    <target name="-app.replace.jsp">

        <antcall target="-app.replace.jsp.default"/>
        <antcall target="-app.replace.jsp.maven"/>
        <antcall target="-app.replace.jsp.dev"/>

    </target>


    <target name="-app.replace.jsp.default">

        <!--Dynamically replaces all *_original.jsp files-->
        <move todir="${app.target.tiles.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.tiles.dir}" includes="**/*_original*"/>
            <mapper>
                <globmapper from="*_original.jsp" to="*.jsp"/>
            </mapper>
        </move>

        <move todir="${app.target.jsp.dir}/_common" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.jsp.dir}/_common" includes="**/*_original.jsp"/>
            <mapper>
                <globmapper from="*_original.jsp" to="*.jsp"/>
            </mapper>
        </move>

        <move todir="${app.target.jsp.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.jsp.dir}" includes="**/*_original.jspf"/>
            <mapper>
                <globmapper from="*_original.jspf" to="*.jspf"/>
            </mapper>
        </move>

        <move todir="${app.target.jsp.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.jsp.dir}" includes="**/*_original.js"/>
            <mapper>
                <globmapper from="*_original.js" to="*.js"/>
            </mapper>
        </move>

        <move todir="${app.target.scripts.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.scripts.dir}" includes="**/*_original.js"/>
            <mapper>
                <globmapper from="*_original.js" to="*.js"/>
            </mapper>
        </move>

        <move todir="${app.target.pages.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.pages.dir}" includes="**/*_original.html"/>
            <mapper>
                <globmapper from="*_original.html" to="*.html"/>
            </mapper>
        </move>

        <move todir="${app.target.web-inf.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.web-inf.dir}" includes="**/*_original.xml"/>
            <mapper>
                <globmapper from="*_original.xml" to="*.xml"/>
            </mapper>
        </move>

    </target>



    
    <target name="-app.replace.jsp.maven" if="do_app_maven_build">

        <move todir="${app.target.maven.pagescripts.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.maven.pagescripts.dir}" includes="**/*_original.js"/>
            <mapper>
                <globmapper from="*_original.js" to="*.js"/>
            </mapper>
        </move>

    </target>



    <target name="-app.replace.jsp.dev" if="do_app_development_build">

        <move todir="${app.target.tiles.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.tiles.dir}" includes="**/*_dev*"/>
            <mapper>
                <globmapper from="*_dev.jsp" to="*.jsp"/>
                <globmapper from="*_dev.jspf" to="*.jspf"/>
            </mapper>
        </move>

        <move todir="${app.target.jsp.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.jsp.dir}" includes="**/*_dev*"/>
            <mapper>
                <globmapper from="*_dev.jspf" to="*.jspf"/>
                <globmapper from="*_dev.jsp" to="*.jsp"/>
            </mapper>
        </move>


    </target>



    <!--======================================================================-->
    <!--                 APP WEB-INF TIMESTAMP REPLACEMENT                    -->
    <!--======================================================================-->

    <target name="-app.replace.web-inf">

        <if>
            <available file="${app.target.web-inf.dir}/tiles-defs_original.xml"/>
            <then>
                <replace file="${app.target.web-inf.dir}/tiles-defs_original.xml" token="@pagescript.timestamp@"
                         value="${pagescript.timestamp}"/>
            </then>
        </if>

    </target>



    <!--=============================================================================================================-->
    <!--                  APP JS & CSS - MINIFICATION, REPLACEMENT & CONCATENATION                                   -->
    <!--=============================================================================================================-->

    <target name="-app.move.min.js.css">

        <move todir="${app.target.jsp.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.jsp.dir}" includes="**/*.js" excludes="**/*.build.js"/>
            <mapper>
                <globmapper from="*.js" to="*${pagescript.timestamp}.js"/>
            </mapper>
        </move>

        <move todir="${app.target.scripts.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.scripts.dir}" includes="**/*.js">
                <exclude name="**/*.build.js"/>
                <exclude name="${app.js.file}"/>
            </fileset>
            <mapper>
                <globmapper from="*.js" to="*${pagescript.timestamp}.js"/>
            </mapper>
        </move>

        <move todir="${app.target.styles.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.styles.dir}" includes="**/*.css">
                <exclude name="**/*.build.css"/>
                <exclude name="${app.css.file}"/>
            </fileset>
            <mapper>
                <globmapper from="*.css" to="*${pagescript.timestamp}.css"/>
            </mapper>
        </move>

    </target>


    <target name="-app.move.min.js.css.maven" if="do_app_maven_build">
        <!--SPECIAL FOR MAVEN STRUCTURE-->
        <move todir="${app.target.maven.pagescripts.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${app.target.maven.pagescripts.dir}" includes="**/*.js" excludes="**/*.build.js"/>
            <mapper>
                <globmapper from="*.js" to="*${pagescript.timestamp}.js"/>
            </mapper>
        </move>
    </target>


    <!--======================================================================-->
    <!--                 APP CLEAN                                            -->
    <!--======================================================================-->

    <target name="-app.clean">
        <delete>
            <fileset dir="${app.target.dir}" includes="**/*.example*"/>
        </delete>


        <antcall target="-app.clean.dev"/>

        <antcall target="-app.clean.prod"/>

    </target>


    
    <target name="-app.clean.dev" if="do_app_development_build">

        <delete>
            <fileset dir="${app.target.scripts.dir}">
                <include name="*.build.js"/>
            </fileset>
        </delete>
        
    </target>



    <target name="-app.clean.prod" if="not_app_development_build">


        <concat destfile="${app.target.scripts.dir}/main${pagescript.timestamp}.build-temp.js"
                encoding="UTF-8"
                outputencoding="UTF-8" fixlastline="true">
            <filelist id="filelist" dir="${app.target.scripts.dir}">
                <file name="main.build.js"/>
                <file name="${app.js.file}"/>
            </filelist>
        </concat>

        <move tofile="${app.target.scripts.dir}/main${pagescript.timestamp}.build.js"
              file="${app.target.scripts.dir}/main${pagescript.timestamp}.build-temp.js"/>        





        <concat destfile="${app.target.scripts.dir}/main.full${pagescript.timestamp}.build-temp.js"
                encoding="UTF-8"
                outputencoding="UTF-8" fixlastline="true">
            <filelist id="filelist" dir="${app.target.scripts.dir}">
                <file name="main.full.build.js"/>
                <file name="${app.js.file}"/>
            </filelist>
        </concat>

        <move tofile="${app.target.scripts.dir}/main.full${pagescript.timestamp}.build.js"
              file="${app.target.scripts.dir}/main.full${pagescript.timestamp}.build-temp.js"/>





        <if>
            <available file="${app.target.scripts.dir}/spa/spa.js"/>
            <then>
                <concat destfile="${app.target.scripts.dir}/main.spa.full${pagescript.timestamp}.build-temp.js"
                        encoding="UTF-8"
                        outputencoding="UTF-8" fixlastline="true">
                    <filelist id="filelist" dir="${app.target.scripts.dir}">
                        <file name="main.spa.full.build.js"/>
                        <file name="spa/spa.js"/>
                    </filelist>
                </concat>

                <move tofile="${app.target.scripts.dir}/main.spa.full${pagescript.timestamp}.build.js"
                      file="${app.target.scripts.dir}/main.spa.full${pagescript.timestamp}.build-temp.js"/>                
            </then>
        </if>



        <concat destfile="${app.target.scripts.dir}/main.bootstrap.full${pagescript.timestamp}.build-temp.js"
                encoding="UTF-8"
                outputencoding="UTF-8" fixlastline="true">
            <filelist id="filelist" dir="${app.target.scripts.dir}">
                <file name="main.bootstrap.full.build.js"/>
                <file name="${app.js.file}"/>
            </filelist>
        </concat>

        <move tofile="${app.target.scripts.dir}/main.bootstrap.full${pagescript.timestamp}.build.js"
              file="${app.target.scripts.dir}/main.bootstrap.full${pagescript.timestamp}.build-temp.js"/>





        <concat destfile="${app.target.styles.dir}/main${pagescript.timestamp}.build-temp.css"
                encoding="UTF-8"
                outputencoding="UTF-8" fixlastline="true">
            <filelist id="filelist" dir="${app.target.styles.dir}">
                <file name="main.build.css"/>
                <file name="${app.css.file}"/>
            </filelist>
        </concat>

        <move tofile="${app.target.styles.dir}/main${pagescript.timestamp}.build.css"
              file="${app.target.styles.dir}/main${pagescript.timestamp}.build-temp.css"/>





        <concat destfile="${app.target.styles.dir}/main.spa${pagescript.timestamp}.build-temp.css"
                encoding="UTF-8"
                outputencoding="UTF-8" fixlastline="true">
            <filelist id="filelist" dir="${app.target.styles.dir}">
                <file name="main.spa.build.css"/>
                <file name="${app.css.file}"/>
            </filelist>
        </concat>

        <move tofile="${app.target.styles.dir}/main.spa${pagescript.timestamp}.build.css"
              file="${app.target.styles.dir}/main.spa${pagescript.timestamp}.build-temp.css"/>





        <concat destfile="${app.target.styles.dir}/main.bootstrap${pagescript.timestamp}.build-temp.css"
                encoding="UTF-8"
                outputencoding="UTF-8" fixlastline="true">
            <filelist id="filelist" dir="${app.target.styles.dir}">
                <file name="main.bootstrap.build.css"/>
                <file name="${app.css.file}"/>
            </filelist>
        </concat>

        <move tofile="${app.target.styles.dir}/main.bootstrap${pagescript.timestamp}.build.css"
              file="${app.target.styles.dir}/main.bootstrap${pagescript.timestamp}.build-temp.css"/>



        <concat destfile="${app.target.styles.dir}/main.bootstrap.only${pagescript.timestamp}.build-temp.css"
                encoding="UTF-8"
                outputencoding="UTF-8" fixlastline="true">
            <filelist id="filelist" dir="${app.target.styles.dir}">
                <file name="main.bootstrap.only.build.css"/>
                <file name="${app.css.file}"/>
            </filelist>
        </concat>

        <move tofile="${app.target.styles.dir}/main.bootstrap.only${pagescript.timestamp}.build.css"
              file="${app.target.styles.dir}/main.bootstrap.only${pagescript.timestamp}.build-temp.css"/>







        <move tofile="${app.target.styles.dir}/main.print${pagescript.timestamp}.build.css"
              file="${app.target.styles.dir}/main.print.build.css"/>

        <move tofile="${app.target.styles.dir}/main.print.bootstrap${pagescript.timestamp}.build.css"
              file="${app.target.styles.dir}/main.print.bootstrap.build.css"/>

        <move tofile="${app.target.styles.dir}/main.print.bootstrap.only${pagescript.timestamp}.build.css"
              file="${app.target.styles.dir}/main.print.bootstrap.only.build.css"/>                            

        <delete>
            <fileset dir="${app.target.scripts.dir}" excludes="*${pagescript.timestamp}.build.js">
                <include name="*"/>
            </fileset>
            <fileset dir="${app.target.styles.dir}" excludes="*${pagescript.timestamp}.build.css">
                <include name="*"/>
            </fileset>
        </delete>

    </target>

    

    <!--======================================================================-->
    <!--                 APP MINIFICATION                                     -->
    <!--======================================================================-->

    <target name="-app.minify.js.css" if="not_app_development_build">
        <antcall target="-app.minify.js.css.sub"/>
    </target>


    <target name="-app.minify.js.css.sub" if="do_app_minify_js_css">
        <foreach param="file" target="yui">
            <fileset dir="${app.target.jsp.dir}" includes="**/*${pagescript.timestamp}.js"/>
            <fileset dir="${app.target.scripts.dir}" includes="**/*${pagescript.timestamp}.js">
                <exclude name="**/_templates/**/*"/>
            </fileset>
            <fileset dir="${app.target.scripts.dir}" includes="**/*${pagescript.timestamp}.build.js"/>
            <fileset dir="${app.target.styles.dir}" includes="*${pagescript.timestamp}.css"/>
            <fileset dir="${app.target.styles.dir}" includes="**/*${pagescript.timestamp}.build.css"/> 
        </foreach>


        <antcall target="-app.minify.js.css.maven"/>
    </target>


    <target name="-app.minify.js.css.maven" if="do_app_maven_build">
        <foreach param="file" target="yui">
            <!--SPECIAL FOR MAVEN STRUCTURE-->
            <fileset dir="${app.target.maven.pagescripts.dir}" includes="**/*${pagescript.timestamp}.js"/>
        </foreach>
    </target>



    <!--======================================================================-->
    <!--                 APP REMOVE LOGGING FROM JS FILES                     -->
    <!--======================================================================-->

    <target name="-app.remove.js.logs" if="not_app_development_build">
        <foreach param="file" target="delog">
            <fileset dir="${app.target.jsp.dir}" includes="**/*.js"/>
            <fileset dir="${app.target.scripts.dir}" includes="**/*.js"/>
        </foreach>

        <antcall target="-app.remove.js.logs.maven"/>
    </target>

    <target name="-app.remove.js.logs.maven" if="do_app_maven_build">
        <foreach param="file" target="delog">
            <!--SPECIAL FOR MAVEN STRUCTURE-->
            <fileset dir="${app.target.maven.pagescripts.dir}" includes="**/*.js"/>
        </foreach>
    </target>

    <!--======================================================================-->
    <!--                     JSP COMPRESSION                                  -->
    <!--======================================================================-->

    <target name="-app.compress.jsp" if="do_app_compress_jsp">


        <echo>COMPRESSING : ${app.target.maven.jsp.dir}</echo>

        <apply executable="java" parallel="false">
            <fileset dir="${app.target.maven.jsp.dir}">
                <exclude name="**/*.js"/>
            </fileset>
            <arg value="-jar"/>
            <arg path="${jscaf.build.lib.htmlCompressor.jar}"/>
            <arg line="--preserve-server-script --type html"/>
            <srcfile/>
            <arg value="-o"/>
            <mapper type="glob" from="*" to="${app.target.maven.jsp.comp.dir.java}/*"/>
            <targetfile/>
        </apply>

        <move todir="${app.target.jsp.dir}" overwrite="yes" includeEmptyDirs="true">
            <fileset dir="${app.target.maven.jsp.comp.dir}" includes="**/*.jsp*"/>
        </move>

        <delete dir="${app.target.maven.jsp.comp.dir}"/>
        

        <echo>COMPRESSING : ${app.target.maven.tiles.dir}</echo>

        <apply executable="java" parallel="false">
            <fileset dir="${app.target.maven.tiles.dir}">
            </fileset>
            <arg value="-jar"/>
            <arg path="${jscaf.build.lib.htmlCompressor.jar}"/>
            <arg line="--preserve-server-script --type html"/>
            <srcfile/>
            <arg value="-o"/>
            <mapper type="glob" from="*" to="${app.target.maven.tiles.comp.dir.java}/*"/>
            <targetfile/>
        </apply>

        <move todir="${app.target.tiles.dir}" overwrite="yes" includeEmptyDirs="true">
            <fileset dir="${app.target.maven.tiles.comp.dir}" includes="**/*.jsp*"/>
        </move>

        <delete dir="${app.target.maven.tiles.comp.dir}"/>


        <echo>COMPRESSING : ${app.target.maven.tags.dir}</echo>

        <apply executable="java" parallel="false">
            <fileset dir="${app.target.maven.tags.dir}">
            </fileset>
            <arg value="-jar"/>
            <arg path="${jscaf.build.lib.htmlCompressor.jar}"/>
            <arg line="--preserve-server-script --type html"/>
            <srcfile/>
            <arg value="-o"/>
            <mapper type="glob" from="*" to="${app.target.maven.tags.comp.dir.java}/*"/>
            <targetfile/>
        </apply>

        <move todir="${app.target.dir}/WEB-INF/tags/jscaf" overwrite="yes" includeEmptyDirs="true">
            <fileset dir="${app.target.maven.tags.comp.dir}" includes="**/*.tag"/>
        </move>

        <delete dir="${app.target.maven.tags.comp.dir}"/>



    </target>




    <!--======================================================================-->
    <!--                     APP CLEAN FINAL                                  -->
    <!--======================================================================-->

    <target name="-app.clean.final">

        <antcall target="-app.clean.final.dev"/>

        <antcall target="-app.clean.final.prod"/>

    </target>


    
    <target name="-app.clean.final.dev" if="do_app_development_build">

       
    </target>



    <target name="-app.clean.final.prod" if="not_app_development_build">

        <delete includeemptydirs="true">
          <fileset dir="${app.target.maven.root.dir}">
            <and>
              <size value="0"/>
              <type type="dir"/>
             </and>
          </fileset>
        </delete>     

    </target>



















<!--
       d8888 8888888b.  8888888b.      8888888 888b    888 8888888 88888888888 
      d88888 888   Y88b 888   Y88b       888   8888b   888   888       888     
     d88P888 888    888 888    888       888   88888b  888   888       888     
    d88P 888 888   d88P 888   d88P       888   888Y88b 888   888       888     
   d88P  888 8888888P"  8888888P"        888   888 Y88b888   888       888     
  d88P   888 888        888       888888 888   888  Y88888   888       888     
 d8888888888 888        888              888   888   Y8888   888       888     
d88P     888 888        888            8888888 888    Y888 8888888     888     
-->                                                                                                                                                             
   




    <!--======================================================================-->
    <!--                     MASSIVE CLEANUP                                  -->
    <!--======================================================================-->

    <target name="clean">
        <echo>${app.target.dir}</echo>
        <delete dir="${app.target.dir}/sample-apps"/>
        <delete dir="${app.target.dir}/war-overlays"/>
        <delete dir="${app.target.dir}/core-files"/>

        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="${jscaf.target.dir}"/>
        </delete>

    </target>






    <!--======================================================================-->
    <!--                     APPLICATION INIT                                 -->
    <!--======================================================================-->

    <target name="-clean.tmp.files">
        <delete file="${basedir}/app.init.ok"/>
        <delete file="${basedir}/generate.wars.ok"/>
    </target>


    <target name="generate.setlocal">
        <delete file="${svn.jscaf.local.dir}/tools/setlocalgen.cmd"/>

        <copy tofile="${svn.jscaf.local.dir}/tools/setlocalgen.cmd"
              file="${svn.jscaf.local.dir}/tools/setlocal.cmd"/>

        <replace file="${svn.jscaf.local.dir}/tools/setlocalgen.cmd"
                 token="@jscaf.version@" value="${jscaf.version}"/>
        <replace file="${svn.jscaf.local.dir}/tools/setlocalgen.cmd"
                 token="@app.name@" value="${app.name}"/>
        <replace file="${svn.jscaf.local.dir}/tools/setlocalgen.cmd"
                 token="@app.name.display@" value="${app.name.display}"/>
        <replace file="${svn.jscaf.local.dir}/tools/setlocalgen.cmd"
                 token="@app.generated.dir@" value="../../${app.generated.dir.root}"/>

    </target>





    <target name="app.init.multi">
        <delete file="${basedir}/app.init.ok"/>   


        <antcall target="-app.init.common"/>


        <!--CLEAN TARGET-->
        <delete dir="${app.init.project.dir}"/>
        <mkdir dir="${app.init.project.dir}"/>

        <!--COPY APP TEMPLATE TO TARGET-->
        <copy todir="${app.init.project.dir}" filtering="true">
            <fileset dir="${svn.jscaf.webapp.skeletons.multi.module.dir}"/>
        </copy>


        <!--REPLACE MODULE NAMES DIRECTORIES-->
        <move toFile="${app.init.project.dir}/${app.name}-parent"
              file="${app.init.project.dir}/myapp-parent"/>  
        <move toFile="${app.init.project.dir}/${app.name}-common"
              file="${app.init.project.dir}/myapp-common"/>
        <move toFile="${app.init.project.dir}/${app.name}-logging"
              file="${app.init.project.dir}/myapp-logging"/>              
        <move toFile="${app.init.project.dir}/${app.name}-persistence"
              file="${app.init.project.dir}/myapp-persistence"/>
        <move toFile="${app.init.project.dir}/${app.name}-service"
              file="${app.init.project.dir}/myapp-service"/>
        <move toFile="${app.init.project.dir}/${app.name}-web"
              file="${app.init.project.dir}/myapp-web"/>           
        <move toFile="${app.init.project.dir}/${app.name}-ear"
              file="${app.init.project.dir}/myapp-ear"/>
    
        <!--COPY TOOLS-->
        <copy todir="${app.init.project.dir}/tools">
            <fileset dir="${jscaf.tools.dir}" excludes="*.example">
                <exclude name="apache**/**"/>
            </fileset>
        </copy>

        <!--REPLACE JSCAF_HOME in setLocal.cmd files-->
        <replace file="${app.init.project.dir}/tools/setlocal.cmd.target"
                 token="@jscaf.home.dir@" value="${jscaf.home.dir}"/>        
        <replace file="${app.init.project.dir}/tools/setlocal_maven.cmd.target"
                 token="@jscaf.home.dir@" value="${jscaf.home.dir}"/>   

        <move file="${app.init.project.dir}/tools/setlocal.cmd.target" 
              toFile="${app.init.project.dir}/tools/setlocal.cmd"/>
        <move file="${app.init.project.dir}/tools/setlocal_maven.cmd.target" 
              toFile="${app.init.project.dir}/tools/setlocal_maven.cmd"/>     



        <!--RENAMING JAVA SOURCES TARGET by custom app group id provided-->

        <replaceAll src="app.group.id" dest="app.group.id.dir" replace="." with="/"/>

        <move tofile="${app.init.project.dir}/${app.name}-persistence/src/main/java/${app.group.id.dir}/${app.name}"
              file="${app.init.project.dir}/${app.name}-persistence/src/main/java/myapp"/>
        <move tofile="${app.init.project.dir}/${app.name}-persistence/src/test/java/${app.group.id.dir}/${app.name}"
              file="${app.init.project.dir}/${app.name}-persistence/src/test/java/myapp"/>

        <move tofile="${app.init.project.dir}/${app.name}-service/src/main/java/${app.group.id.dir}/${app.name}"
              file="${app.init.project.dir}/${app.name}-service/src/main/java/myapp"/>
        <move tofile="${app.init.project.dir}/${app.name}-service/src/test/java/${app.group.id.dir}/${app.name}"
              file="${app.init.project.dir}/${app.name}-service/src/test/java/myapp"/>              

        <move tofile="${app.init.project.dir}/${app.name}-common/src/main/java/${app.group.id.dir}/${app.name}"
              file="${app.init.project.dir}/${app.name}-common/src/main/java/myapp"/>
        <move tofile="${app.init.project.dir}/${app.name}-common/src/test/java/${app.group.id.dir}/${app.name}"
              file="${app.init.project.dir}/${app.name}-common/src/test/java/myapp"/>   


        <var name="app.init.web.module.dir" value="${app.init.project.dir}/${app.name}-web"/>   
        <antcall target="-app.init.web.module"/>

        <echo>*********************************************************************</echo>
        <echo>SAMPLE APP GENERATED IN : ${app.init.project.dir}</echo>
        <echo>*********************************************************************</echo>   
        <echo></echo>


        <!--PUT BACK WEB.XML & tiles-defs.xml with their token replacement-->
        <copy toFile="${app.init.web.module.dir}/src/main/webapp/WEB-INF/web_original.xml"
              file="${svn.jscaf.webapp.skeletons.web.module.dir}-base/src/main/webapp/WEB-INF/web.xml"/>

        <delete file="${app.init.web.module.dir}/src/main/webapp/WEB-INF/web.xml"/>
        <delete file="${app.init.web.module.dir}/src/main/webapp/WEB-INF/web.xml.base"/>

        <touch file="${basedir}/app.init.ok"/>  
    </target>    





    <target name="app.init.base">

        <delete file="${basedir}/app.init.ok"/>   

        <antcall target="-app.init.common"/>

        <var name="app.init.web.module.dir" value="${app.init.project.dir}-base"/>   

        <!--CLEAN TARGET-->
        <delete dir="${app.init.web.module.dir}"/>
        <mkdir dir="${app.init.web.module.dir}"/>


        <!-- COPYING TOOLS -->
        <copy todir="${app.init.web.module.dir}/jscaf/tools">
            <fileset dir="${jscaf.tools.dir}" excludes="*.example">
                <exclude name="apache**/**"/>
            </fileset>
        </copy>

        <!--REPLACE JSCAF_HOME in setLocal.cmd files-->

        <replace file="${app.init.web.module.dir}/jscaf/tools/setlocal.cmd.target"
                 token="@jscaf.home.dir@" value="${jscaf.home.dir}"/>        
        <replace file="${app.init.web.module.dir}/jscaf/tools/setlocal_maven.cmd.target"
                 token="@jscaf.home.dir@" value="${jscaf.home.dir}"/>           

        <move file="${app.init.web.module.dir}/jscaf/tools/setlocal.cmd.target" 
              toFile="${app.init.web.module.dir}/jscaf/tools/setlocal.cmd"/>
        <move file="${app.init.web.module.dir}/jscaf/tools/setlocal_maven.cmd.target" 
              toFile="${app.init.web.module.dir}/jscaf/tools/setlocal_maven.cmd"/>


        <!--COPYING SAMPLE JAVA FILES-->
        <replaceAll src="app.group.id" dest="app.group.id.dir" replace="." with="/"/>

        <antcall target="-app.init.web.module"/>

        <!--PUT BACK WEB.XML with its token replacement-->

        <copy toFile="${app.init.web.module.dir}/src/main/webapp/WEB-INF/web_original.xml"
              file="${svn.jscaf.webapp.skeletons.web.module.dir}-base/src/main/webapp/WEB-INF/web.xml" overwrite="true"/>

        <copy toFile="${app.init.web.module.dir}/src/main/webapp/WEB-INF/web.xml"
              file="${svn.jscaf.webapp.skeletons.web.module.dir}-base/src/main/webapp/WEB-INF/web.xml.base" overwrite="true"/>
        

        <touch file="${basedir}/app.init.ok"/>  
    </target>





    <target name="app.init.mips.hrt">
        <delete file="${basedir}/app.init.ok"/>   

        <antcall target="-app.init.common"/>
        <antcall target="-app.init.mips.hrt"/>
        
        <touch file="${basedir}/app.init.ok"/>      
    </target>







    <target name="-app.init.common">

        <echo></echo>
        <echo>***************************************************************************</echo>
        <echo>************ APPLICATION INIT PROCESS *************************************</echo>
        <echo>***************************************************************************</echo>
        <echo></echo>

        <antcall target="-clean.tmp.files"/>
        <antcall target="-check.parameters"/>

        <copy todir="${svn.jscaf.local.dir}/target">
              <fileset dir="${svn.jscaf.local.dir}/target-generated"/>
        </copy>
    </target>




    <!--======================================================================-->
    <!--           APPLICATION INIT : SpringMVC & MAVEN & WAR OVERLAY         -->
    <!--======================================================================-->

    <target name="-app.init.web.module">
    
        <!--COPY APP TEMPLATE TO TARGET-->
        <copy todir="${app.init.web.module.dir}" filtering="true">
            <fileset dir="${svn.jscaf.webapp.skeletons.web.module.dir}-base"/>
        </copy>



        <!--RENAMING JAVA SOURCES TARGET-->

        <move tofile="${app.init.web.module.dir}/src/main/java/${app.group.id.dir}/${app.name}"
              file="${app.init.web.module.dir}/src/main/java/myapp"/>


        

        <!--REPLACE POM TOKENS-->
        <move tofile="${app.init.web.module.dir}/pom.xml" filtering="true"
              file="${app.init.web.module.dir}/pom.xml"/>

        <!--ENABLE jSCAF-->
        <copy todir="${app.init.web.module.dir}/src/jscaf/webapp/scripts">
            <fileset dir="${svn.jscaf.local.dir}/target/scripts"/>
        </copy>

        <copy todir="${app.init.web.module.dir}/src/jscaf/webapp/styles">
            <fileset dir="${svn.jscaf.local.dir}/target/styles"/>
        </copy>


        <!--COPY jSCAF RELATED SOURCES-->

        <move tofile="${app.init.web.module.dir}/src/main/webapp/scripts/${app.js.file}"
              file="${app.init.web.module.dir}/src/main/webapp/scripts/common.app.js"/>

        <move tofile="${app.init.web.module.dir}/src/main/webapp/styles/${app.css.file}"
              file="${app.init.web.module.dir}/src/main/webapp/styles/common.app.css"/>

        <copy todir="${app.init.web.module.dir}/jscaf/build">
            <fileset dir="${svn.jscaf.local.dir}/build"/>
        </copy>

        <copy todir="${app.init.web.module.dir}/jscaf/_templates">
            <fileset dir="${svn.jscaf.local.dir}/src/main/_templates"/>
        </copy>


        <!--COPY TAGS-->

        <copy todir="${app.init.web.module.dir}/src/main/webapp/WEB-INF/tags/jscaf">
            <fileset dir="${svn.jscaf.local.dir}/target/WEB-INF/tags/jscaf/spring"/>
        </copy>

        <copy tofile="${app.init.web.module.dir}/src/main/webapp/WEB-INF/jscaf-tags.tld"
              file="${svn.jscaf.local.dir}/target/WEB-INF/jscaf-tags.tld"/>


        <!--COPY EXAMPLES FILES-->

        <copy todir="${app.init.web.module.dir}/src/jscaf/webapp/WEB-INF/jsp/contents/_common" overwrite="yes" includeEmptyDirs="true">
            <fileset dir="${svn.jscaf.local.dir}/src/main/webapp/jsp/_common" includes="**/*.jsp*"/>
        </copy>

        <copy todir="${app.init.web.module.dir}/src/jscaf/webapp/WEB-INF/jsp/tiles/110" overwrite="yes" includeEmptyDirs="true">
            <fileset dir="${svn.jscaf.local.dir}/src/main/webapp/tiles/110" includes="**/*.jsp*"/>
        </copy>

        <!--MOVING SOME KEY FILES to be customised in /tiles-->
        <copy tofile="${app.init.web.module.dir}/src/main/webapp/WEB-INF/jsp/tiles/110/common_app_data.jsp" filtering="true"
              file="${app.init.web.module.dir}/src/jscaf/webapp/WEB-INF/jsp/tiles/110/common_app_data_original.jsp"/>

        <!-- copy _app images -->
    
        <copy todir="${app.init.web.module.dir}/src/main/webapp/styles/images/_app">
            <fileset dir="${svn.jscaf.local.dir}/src/main/webapp/styles/images/_app"/>
        </copy>

        <copy toFile="${app.init.web.module.dir}/src/main/webapp/styles/images/_app/page-title-icons/home.png"
              file="${svn.jscaf.local.dir}/src/main/webapp/styles/images/page-title-icons/home.png"/>


    </target>





























    <target name="-app.init.mips.hrt">

        <delete dir="${app.init.mips.hrt.dir}"/>

        <copy todir="${app.init.mips.hrt.dir}/src">
            <fileset dir="${svn.jscaf.local.dir}/src"/>
        </copy>

        <copy todir="${app.init.mips.hrt.dir}/build">
            <fileset dir="${svn.jscaf.local.dir}/build"/>
        </copy>

    </target>














<!--
 .d8888b.   .d88888b.  8888888b.  8888888888     8888888 888b    888 8888888 88888888888 
d88P  Y88b d88P" "Y88b 888   Y88b 888              888   8888b   888   888       888     
888    888 888     888 888    888 888              888   88888b  888   888       888     
888        888     888 888   d88P 8888888          888   888Y88b 888   888       888     
888        888     888 8888888P"  888              888   888 Y88b888   888       888     
888    888 888     888 888 T88b   888       888888 888   888  Y88888   888       888     
Y88b  d88P Y88b. .d88P 888  T88b  888              888   888   Y8888   888       888     
 "Y8888P"   "Y88888P"  888   T88b 8888888888     8888888 888    Y888 8888888     888     
-->



    <!--======================================================================-->
    <!--                     CORE FILES INIT                                  -->
    <!--======================================================================-->

    <target name="generate.core.files" depends="-clean.tmp.files, -check.parameters">

        <copy todir="${svn.jscaf.local.dir}/target">
              <fileset dir="${svn.jscaf.local.dir}/target-generated"/>
        </copy>

        <delete failonerror="false" includeEmptyDirs="true">
            <fileset dir="${app.init.core.files.dir}"/>
        </delete>

        <copy todir="${app.init.core.files.dir}">
            <fileset dir="${svn.jscaf.local.dir}/target"/>
        </copy>

        <delete dir="${app.init.core.files.dir}/jsp"/>
        <delete dir="${app.init.core.files.dir}/pages"/>
        <delete dir="${app.init.core.files.dir}/tiles"/>
        <delete dir="${app.init.core.files.dir}/WEB-INF"/>

        <foreach param="file" target="delog">
            <fileset dir="${app.init.core.files.dir}/scripts" includes="*build.js"/>
        </foreach>

        <foreach param="file" target="yui">
            <fileset dir="${app.init.core.files.dir}/scripts" includes="*build.js"/>
            <fileset dir="${app.init.core.files.dir}/styles" includes="*build.css"/> 
        </foreach>



    </target>





























<!--
888       888        d8888 8888888b.         .d88888b.  888     888 8888888888 8888888b.  888             d8888 Y88b   d88P 
888   o   888       d88888 888   Y88b       d88P" "Y88b 888     888 888        888   Y88b 888            d88888  Y88b d88P  
888  d8b  888      d88P888 888    888       888     888 888     888 888        888    888 888           d88P888   Y88o88P   
888 d888b 888     d88P 888 888   d88P       888     888 Y88b   d88P 8888888    888   d88P 888          d88P 888    Y888P    
888d88888b888    d88P  888 8888888P"        888     888  Y88b d88P  888        8888888P"  888         d88P  888     888     
88888P Y88888   d88P   888 888 T88b  888888 888     888   Y88o88P   888        888 T88b   888        d88P   888     888     
8888P   Y8888  d8888888888 888  T88b        Y88b. .d88P    Y888P    888        888  T88b  888       d8888888888     888     
888P     Y888 d88P     888 888   T88b        "Y88888P"      Y8P     8888888888 888   T88b 88888888 d88P     888     888     
-->
                                                                                                                            



    <!--======================================================================-->
    <!--                     WAR OVERLAYS GENERATION                          -->
    <!--======================================================================-->

    <target name="generate.war.overlays">

        <echo></echo>
        <echo>***************************************************************************</echo>
        <echo>************ WAR OVERLAY GENERATION PROCESS *******************************</echo>
        <echo>***************************************************************************</echo>
        <echo></echo>

        <antcall target="-clean.tmp.files"/>
        <antcall target="-check.parameters"/>

        <var name="war.file.name" value="jSCAF.war"/>
        <var name="war.exploded.dir" value="${jscaf.target.wars.dir}/${war.file.name}-exploded"/>

        <delete dir="${war.exploded.dir}"/>
        <mkdir dir="${war.exploded.dir}"/>

        <copy todir="${svn.jscaf.local.dir}/target">
              <fileset dir="${svn.jscaf.local.dir}/target-generated"/>
        </copy>

        <!--COPY TARGET-->
        <copy todir="${war.exploded.dir}">
            <fileset dir="${jscaf.target.dir}"/>
        </copy>

        <!--MOVE TO WEB-INF-->
        <move todir="${war.exploded.dir}/WEB-INF/jsp/contents">
            <fileset dir="${war.exploded.dir}/jsp"/>
        </move>

        <move todir="${war.exploded.dir}/WEB-INF/jsp/tiles">
            <fileset dir="${war.exploded.dir}/tiles"/>
        </move>

        <move todir="${war.exploded.dir}/WEB-INF/pages">
            <fileset dir="${war.exploded.dir}/pages"/>
        </move>


        <!--CLEAN UNECESSARY FILES-->
        <delete>
            <fileset dir="${war.exploded.dir}/WEB-INF" includes="template*"/>
        </delete>

        <delete dir="${war.exploded.dir}/WEB-INF/jsp/contents/_templates"/>


        <!--MOVE SPRING RELATED FILE + CLEAN ALL STRUTS FILES-->

        <move todir="${war.exploded.dir}/WEB-INF/tags/jscaf" overwrite="yes" includeEmptyDirs="true">
            <fileset dir="${war.exploded.dir}/WEB-INF/tags/jscaf/spring" includes="**/*.tag*"/>
        </move>

        <delete>
            <fileset dir="${war.exploded.dir}/WEB-INF/tags/jscaf/struts"/>
        </delete>



        <!--MAKE WAR-->
        <war warfile="${jscaf.target.wars.dir}/${war.file.name}" roundup="false" needxmlfile="false">
            <fileset dir="${war.exploded.dir}"/>
        </war>





        <!--==========================-->
        <!--Building the DEV jSCAF WAR-->
        <!--==========================-->

        <var name="dev.war.file.name" value="jSCAF-DEV.war"/>
        <var name="dev.war.exploded.dir" value="${jscaf.target.wars.dir}/${dev.war.file.name}-exploded"/>        

        <delete dir="${dev.war.exploded.dir}"/>
        <mkdir dir="${dev.war.exploded.dir}"/>


        <copy todir="${dev.war.exploded.dir}">
            <fileset dir="${war.exploded.dir}"/>
        </copy>



        <!-- REPLACE TOKENIZED FILES BY THEIR RESULTS TO MIMIC DEPLOYED ONES -->

        <move todir="${dev.war.exploded.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${dev.war.exploded.dir}" includes="**/*_original*"/>
            <mapper>
                <globmapper from="*_original.jsp" to="*.jsp"/>
                <globmapper from="*_original.jspf" to="*.jspf"/>
            </mapper>
        </move>


        <!-- DEV FILES WILL BE USED FOR THE PLAYGROUND, EXPOSING ENTIRE SOURCES FOR EASY DEBUGGING -->

        <move todir="${dev.war.exploded.dir}" overwrite="yes" includeEmptyDirs="true" filtering="true">
            <fileset dir="${dev.war.exploded.dir}" includes="**/*_dev*"/>
            <mapper>
                <globmapper from="*_dev.jsp" to="*.jsp"/>
                <globmapper from="*_dev.jspf" to="*.jspf"/>
            </mapper>
        </move>    


        <war warfile="${jscaf.target.wars.dir}/${dev.war.file.name}" roundup="false" needxmlfile="false">
            <fileset dir="${dev.war.exploded.dir}"/>
        </war>


        <!--================================================-->
        <!--copy war overlay to target generated for release-->
        <!--================================================-->

        <copy tofile="${jscaf.target.generated.wars.dir}/${dev.war.file.name}"
              file="${jscaf.target.wars.dir}/${dev.war.file.name}"/>

        <copy tofile="${jscaf.target.generated.wars.dir}/${war.file.name}"
              file="${jscaf.target.wars.dir}/${war.file.name}"/>              

        <touch file="${basedir}/generate.wars.ok"/>

    </target>














<!--
       d8888 8888888b.  8888888b.        888     888 8888888b.  8888888b.         d8888 88888888888 8888888888 
      d88888 888   Y88b 888   Y88b       888     888 888   Y88b 888  "Y88b       d88888     888     888        
     d88P888 888    888 888    888       888     888 888    888 888    888      d88P888     888     888        
    d88P 888 888   d88P 888   d88P       888     888 888   d88P 888    888     d88P 888     888     8888888    
   d88P  888 8888888P"  8888888P"        888     888 8888888P"  888    888    d88P  888     888     888        
  d88P   888 888        888       888888 888     888 888        888    888   d88P   888     888     888        
 d8888888888 888        888              Y88b. .d88P 888        888  .d88P  d8888888888     888     888        
d88P     888 888        888               "Y88888P"  888        8888888P"  d88P     888     888     8888888888 
                                                                                                               
-->    


<target name="app.update.jscaf"> 


        <lower string="${basedir}" to="basedir.lower"/>
        <lower string="${jscaf.home.dir}/build" to="jscaf.build.dir.lower"/>

        <propertyregex property="basedir.replaced"
                  input="${basedir.lower}"
                  regexp="\\"
                  replace="/"
                  casesensitive="false"
                  global="true"/>

        <if>
            <equals arg1="${basedir.replaced}" arg2="${jscaf.build.dir.lower}"/>
            <then>
                <echo>ERROR !!!!</echo>
                <echo>This command cannot be executed within jSCAF local directory, ONLY from the target application</echo>
            </then>
            <else>

                <echo>COPY TO LOCAL TARGET</echo>
                <echo></echo>

                <copy todir="${jscaf.home.dir}/target">
                      <fileset dir="${jscaf.home.dir}/target-generated"/>
                </copy>


                <echo>CLEANING all examples files : DEPRECATED SINCE 1.9</echo>
                <echo></echo>

                <delete>
                    <fileset dir="${app.sources.maven.root.dir}">
                        <include name="**/*.example*"/>
                    </fileset>
                </delete>     


                <echo></echo>
                <echo></echo>
                <echo>UPDATING page creation templates</echo>
                <echo></echo>

                <delete>
                    <fileset dir="${app.sources.maven.jscaf.dir}/_templates">
                        <include name="**/*"/>
                    </fileset>
                </delete>  

                <copy todir="${app.sources.maven.jscaf.dir}/_templates" overwrite="yes" includeEmptyDirs="true">
                    <fileset dir="${jscaf.home.dir}/src/main/_templates"/>
                </copy>


                <echo></echo>
                <echo></echo>
                <echo>UPDATING tags and TLD file</echo>
                <echo></echo>

                <delete>
                    <fileset dir="${app.sources.maven.web-inf.dir}/tags/jscaf">
                        <include name="*.tag"/>
                    </fileset>
                </delete>                 

                <copy todir="${app.sources.maven.web-inf.dir}/tags/jscaf">
                    <fileset dir="${jscaf.home.dir}/target/WEB-INF/tags/jscaf/spring"/>
                </copy>

                <copy tofile="${app.sources.maven.web-inf.dir}/jscaf-tags.tld"
                      file="${jscaf.home.dir}/target/WEB-INF/jscaf-tags.tld"/>                



                <echo></echo>
                <echo></echo>
                <echo>UPDATING jSCAF WEBAPP RESOURCES</echo>
                <echo></echo>

                <mkdir dir="${app.sources.maven.root.dir}/jscaf/webapp"/>

                <!-- DELETE ALL FILES -->    

                <delete>
                     <fileset dir="${app.sources.maven.root.dir}/jscaf/webapp">
                        <include name="**/*"/>
                     </fileset>
                </delete>


                <!-- DELETE EMPTY DIRECTORIES -->

                <delete includeemptydirs="true">
                  <fileset dir="${app.sources.maven.root.dir}/jscaf/webapp">
                    <and>
                      <size value="0"/>
                      <type type="dir"/>
                     </and>
                  </fileset>
                </delete>                

                <copy todir="${app.sources.maven.root.dir}/jscaf/webapp/scripts" overwrite="yes" includeEmptyDirs="true">
                    <fileset dir="${jscaf.home.dir}/target/scripts"/>
                </copy>

                <copy todir="${app.sources.maven.root.dir}/jscaf/webapp/styles" overwrite="yes" includeEmptyDirs="true">
                    <fileset dir="${jscaf.home.dir}/target/styles"/>
                </copy>

                <!--COPY EXAMPLES FILES-->

                <copy todir="${app.sources.maven.root.dir}/jscaf/webapp/WEB-INF/jsp/contents/_common" overwrite="yes" includeEmptyDirs="true">
                    <fileset dir="${jscaf.home.dir}/target/jsp/_common" includes="**/*.jsp*"/>
                </copy>

                <copy todir="${app.sources.maven.root.dir}/jscaf/webapp/WEB-INF/jsp/tiles" overwrite="yes" includeEmptyDirs="true">
                    <fileset dir="${jscaf.home.dir}/target/tiles" includes="**/*.jsp*"/>
                </copy>

            </else>
        </if>                

</target>

































<!--
 .d8888b.  8888888b.  8888888888        d8888 88888888888 8888888888       8888888b.      d8888  .d8888b.  8888888888 
d88P  Y88b 888   Y88b 888              d88888     888     888              888   Y88b    d88888 d88P  Y88b 888        
888    888 888    888 888             d88P888     888     888              888    888   d88P888 888    888 888        
888        888   d88P 8888888        d88P 888     888     8888888          888   d88P  d88P 888 888        8888888    
888        8888888P"  888           d88P  888     888     888              8888888P"  d88P  888 888  88888 888        
888    888 888 T88b   888          d88P   888     888     888       888888 888       d88P   888 888    888 888        
Y88b  d88P 888  T88b  888         d8888888888     888     888              888      d8888888888 Y88b  d88P 888        
 "Y8888P"  888   T88b 8888888888 d88P     888     888     8888888888       888     d88P     888  "Y8888P88 8888888888 
-->
                                                                                                                      
          


    <!--======================================================================-->
    <!--                     PAGE CREATION                                    -->
    <!--======================================================================-->

    <target name="app.create.page">

        <lower string="${basedir}" to="basedir.lower"/>
        <lower string="${svn.jscaf.local.dir}/build" to="jscaf.build.dir.lower"/>

        <propertyregex property="basedir.replaced"
                  input="${basedir.lower}"
                  regexp="\\"
                  replace="/"
                  casesensitive="false"
                  global="true"/>

        <if>
            <equals arg1="${basedir.replaced}" arg2="${jscaf.build.dir.lower}"/>
            <then>
                <echo>ERROR !!!!</echo>
                <echo>This command cannot be executed within jSCAF local directory, ONLY from the target application</echo>
            </then>
            <else>

                <!--CHECKING MANDATORY PARAMETERS-->

                <fail unless="page.name">page.name NOT DEFINED</fail>

                <fail unless="app.sources.maven.root.dir">app.sources.maven.root.dir NOT DEFINED in build.app.properties file</fail>
                <fail unless="app.sources.maven.java.app.dir">app.sources.maven.java.app.dir NOT DEFINED in build.app.properties file</fail>
                <fail unless="app.sources.maven.web-inf.dir">app.sources.maven.web-inf.dir NOT DEFINED in build.app.properties file</fail>
                <fail unless="app.sources.maven.jsp.dir">app.sources.maven.jsp.dir NOT DEFINED in build.app.properties file</fail>
                <fail unless="app.sources.maven.pagescripts.dir">app.sources.maven.pagescripts.dir NOT DEFINED in build.app.properties file</fail>
                <fail unless="app.sources.maven.resources.dir">app.sources.maven.resources.dir NOT DEFINED in build.app.properties file</fail>



                <!--GENERATING DYNAMIC VARIABLES-->

                <condition property="module.is.defined">
                    <isset property="module.name"/>
                </condition>                    

                <if>
                    <istrue value="${module.is.defined}"/>
                    <then>
                        <var name="full.page.name" value="${module.name}/${page.name}"/>
                        <var name="full.page.mapping" value="${module.name}/${page.name}"/>
                        <var name="full.page.name.resources" value="${module.name}.${page.name}"/>
                        <var name="module.mapping" value="${module.name}"/>
                    </then>
                    <else>
                        <var name="full.page.name" value="${page.name}"/>
                        <var name="full.page.mapping" value="${page.name}"/>
                        <var name="full.page.name.resources" value="${page.name}"/>
                        <var name="module.mapping" value=""/>
                        <var name="module.name" value="${page.name}"/>         
                    </else>
                </if>


                <var name="pagescript" value="${page.name}@TO_BE_REPLACED@"/>

                <capitalize string="${page.name}" to="page.Name"/>    
                <capitalize string="${module.name}" to="module.Name"/> 

                <var name="page.Controller" value="${page.Name}Controller"/>
                <var name="page.form" value="${page.name}Form"/>
                <var name="page.Form" value="${page.Name}Form"/>


                <echo>FULL PAGE NAME : ${full.page.name}</echo>
                <echo>FULL PAGE MAPPING : ${full.page.mapping}</echo>
                <echo>FULL PAGE NAME RESOURCES : ${full.page.name.resources}</echo>
                <echo>PAGE NAME (cap): ${page.Name}</echo>
                <echo>PAGE CONTROLLER (cap): ${page.Controller}</echo>
                <echo>PAGE FORM : ${page.form}</echo>
                <echo>PAGE FORM (cap): ${page.Form}</echo>
                <echo>MODULE NAME : ${module.name}</echo>
                <echo>MODULE NAME (cap): ${module.Name}</echo>





                <!--ENABLE FILTERS-->

                <filter token="page.name" value="${page.name}"/>
                <filter token="page.Name" value="${page.Name}"/>
                <filter token="module.name" value="${module.name}"/>
                <filter token="module.Name" value="${module.Name}"/>
                <filter token="full.page.name" value="${full.page.name}"/>
                <filter token="full.page.mapping" value="${full.page.mapping}"/>
                <filter token="page.name.resources" value="${full.page.name.resources}"/>
                <filter token="module.mapping" value="${module.mapping}"/>          
                <filter token="page.mapping" value="${page.mapping}"/>
                <filter token="page.Controller" value="${page.Controller}"/>
                <filter token="page.form" value="${page.form}"/>
                <filter token="page.Form" value="${page.Form}"/>
                <filter token="pagescript" value="${pagescript}"/>







                <!--COPY TEMPLATE PAGE STRUCTURE TO THE NEW PAGE-->

                <copy todir="${app.sources.maven.jsp.dir}/${full.page.name}" overwrite="yes" filtering="true">
                      <fileset dir="${app.sources.project.jscaf.templates.dir}/page/page-default"/>
                      <mapper>
                            <globmapper from="page*" to="${page.name}*"/>
                      </mapper>
                </copy>
                
                <mkdir dir="${app.sources.maven.jsp.dir}/${full.page.name}/fragments"/>
                
                <!--MOVING PAGESCRIPT to the pagescripts foltder-->
                <move tofile="${app.sources.maven.pagescripts.dir}/${full.page.name}/${page.name}.js" overwrite="yes"
                      file="${app.sources.maven.jsp.dir}/${full.page.name}/${page.name}.js"/>                


                <!--GENERATE THE PAGE CONTROLLER FROM THE CONTROLLER TEMPLATE-->

                <copy tofile="${app.sources.maven.java.app.dir}/web/controller/generated/${page.Controller}.java" overwrite="yes" filtering="true"
                      file="${app.sources.project.jscaf.templates.dir}/_templateController.sample"/>


                <!--GENERATE THE PAGE FORM FROM THE FORM TEMPLATE-->

                <copy tofile="${app.sources.maven.java.app.dir}/web/form/generated/${page.Form}.java" overwrite="yes" filtering="true"
                      file="${app.sources.project.jscaf.templates.dir}/_templateForm.sample"/>

                
                
                <!--GENERATE THE MODULE REPOSITORY FROM TEMPLATE-->
                <!--
                <copy tofile="${app.sources.maven.java.app.dir}/repository/generated/${module.Name}Repository.java" overwrite="yes" filtering="true"
                      file="${app.sources.project.jscaf.templates.dir}/_templateRepository.sample"/>
                -->

                <!--GENERATE THE MODULE ENTITY FROM TEMPLATE-->
                <!--
                <copy tofile="${app.sources.maven.java.app.dir}/entity/generated/${module.Name}.java" overwrite="yes" filtering="true"
                      file="${app.sources.project.jscaf.templates.dir}/_templateEntity.sample"/>
                -->            
                
                                
                
                <!--GENERATE THE MODULE SERVICE FROM TEMPLATE-->
                <!--
                <copy tofile="${app.sources.maven.java.app.dir}/service/generated/${module.Name}Service.java" overwrite="yes" filtering="true"
                      file="${app.sources.project.jscaf.templates.dir}/_templateService.sample"/>                
                -->
                
                
                <!--INJECTING THE PAGE DEFITION IN TILES DEFINITIONS FILE-->

                <copy tofile="${app.sources.maven.web-inf.dir}/tiles-defs.xml.backup"
                      file="${app.sources.maven.web-inf.dir}/tiles-defs.xml"/>

                <replace file="${app.sources.maven.web-inf.dir}/tiles-defs.xml.backup" token="&lt;/tiles-definitions&gt;"
                         value=""/>

                <copy tofile="${app.sources.maven.web-inf.dir}/tiles-defs.xml.new.page" filtering="true" overwrite="yes"
                      file="${app.sources.project.jscaf.templates.dir}/_templatePageDefinition.sample"/>

                <concat destfile="${app.sources.maven.web-inf.dir}/tiles-defs.xml.final"
                        encoding="UTF-8"
                        outputencoding="UTF-8" fixlastline="true">
                    <filelist>
                        <file name="${app.sources.maven.web-inf.dir}/tiles-defs.xml.backup"/>
                        <file name="${app.sources.maven.web-inf.dir}/tiles-defs.xml.new.page"/>
                    </filelist>
                </concat>

                <move tofile="${app.sources.maven.web-inf.dir}/tiles-defs.xml" overwrite="yes"
                      file="${app.sources.maven.web-inf.dir}/tiles-defs.xml.final"/>

                <delete file="${app.sources.maven.web-inf.dir}/tiles-defs.xml.backup"/>

                <delete file="${app.sources.maven.web-inf.dir}/tiles-defs.xml.new.page"/>

                <replace file="${app.sources.maven.web-inf.dir}/tiles-defs.xml" token="TO_BE_REPLACED" value="pagescript.timestamp"/>






                <!-- INJECTING THE MESSAGE RESOURCE TEMPLATE INTO THE MAIN RESOURCES FILES -->


                <copy tofile="${app.sources.maven.resources.dir}/applicationText_en.properties.new" filtering="true" overwrite="yes"
                      file="${app.sources.project.jscaf.templates.dir}/_templatePageResources.sample"/>
                <copy tofile="${app.sources.maven.resources.dir}/applicationText_fr.properties.new" filtering="true" overwrite="yes"
                      file="${app.sources.project.jscaf.templates.dir}/_templatePageResources.sample"/>

                <concat destfile="${app.sources.maven.resources.dir}/applicationText_en.properties.final"
                        encoding="UTF-8"
                        outputencoding="UTF-8" fixlastline="true">
                    <filelist>
                        <file name="${app.sources.maven.resources.dir}/applicationText_en.properties"/>
                        <file name="${app.sources.maven.resources.dir}/applicationText_en.properties.new"/>
                    </filelist>
                </concat>
                <concat destfile="${app.sources.maven.resources.dir}/applicationText_fr.properties.final"
                        encoding="UTF-8"
                        outputencoding="UTF-8" fixlastline="true">
                    <filelist>
                        <file name="${app.sources.maven.resources.dir}/applicationText_fr.properties"/>
                        <file name="${app.sources.maven.resources.dir}/applicationText_fr.properties.new"/>
                    </filelist>
                </concat>

                <move tofile="${app.sources.maven.resources.dir}/applicationText_en.properties" overwrite="yes"
                      file="${app.sources.maven.resources.dir}/applicationText_en.properties.final"/>
                <move tofile="${app.sources.maven.resources.dir}/applicationText_fr.properties" overwrite="yes"
                      file="${app.sources.maven.resources.dir}/applicationText_fr.properties.final"/>

                <delete file="${app.sources.maven.resources.dir}/applicationText_en.properties.new"/>
                <delete file="${app.sources.maven.resources.dir}/applicationText_fr.properties.new"/>

            </else>
        </if>

    </target>






















<!--
 .d8888b.  8888888888 888b    888 8888888888 8888888b.         d8888 88888888888  .d88888b.  8888888b.  
d88P  Y88b 888        8888b   888 888        888   Y88b       d88888     888     d88P" "Y88b 888   Y88b 
888    888 888        88888b  888 888        888    888      d88P888     888     888     888 888    888 
888        8888888    888Y88b 888 8888888    888   d88P     d88P 888     888     888     888 888   d88P 
888  88888 888        888 Y88b888 888        8888888P"     d88P  888     888     888     888 8888888P"  
888    888 888        888  Y88888 888        888 T88b     d88P   888     888     888     888 888 T88b   
Y88b  d88P 888        888   Y8888 888        888  T88b   d8888888888     888     Y88b. .d88P 888  T88b  
 "Y8888P88 8888888888 888    Y888 8888888888 888   T88b d88P     888     888      "Y88888P"  888   T88b 
-->









  <property name="generator.jsp.contents.dir" value="generated/jsp/contents"/>
  <property name="generator.js.contents.dir" value="generated"/>
  <property name="" value=""/>


  <target name="generator">

    <delete dir="generated"/>
    <mkdir dir="${generator.jsp.contents.dir}"/>
    <mkdir dir="${generator.js.contents.dir}"/>

    <loadfile property="file" srcfile="generator.properties"/>

    <for param="line" list="${file}" delimiter="${line.separator}">
      <sequential>
        <!--
        <echo>@{line}</echo>
        -->
      
        <var name="filePath" value="@{line}"/>

        <lastIndexOf text="${filePath}" search=".jspf" property="jspf"/>
        <lastIndexOf text="${filePath}" search=".jsp" property="jsp"/>
        <lastIndexOf text="${filePath}" search="-inner.jspf" property="inner"/>
        <lastIndexOf text="${filePath}" search="pagescripts" property="pagescripts"/>
        <!--        
        <echo></echo>
        <echo></echo>
        <echo>${filePath}</echo>
        <echo>jspf : ${jspf}</echo>  
        <echo>jsp : ${jsp}</echo>  
        <echo>inner : ${inner}</echo>  
        <echo>pagescripts : ${pagescripts}</echo>  
 -->
        <if>
            <equals arg1="${jspf}" arg2="-1"/>
            <then>
            <if>
                <equals arg1="${inner}" arg2="-1"/>
                <then>
                <if>
                    <equals arg1="${pagescripts}" arg2="-1"/>
                    <then>
                       <antcall target="-generate.jsp"/>
                    </then>
                    <else>
                       <antcall target="-generate.js"/>
                    </else>
                </if>
                </then>
            </if>
            </then>
            <else>
                <if>
                    <equals arg1="${inner}" arg2="-1"/>
                    <then>
                        <antcall target="-generate.jspf"/>
                    </then>
                    <else>
                        <antcall target="-generate.inner"/>
                    </else>
                </if>              
            </else>
        </if>
  

      </sequential>
    </for>
  </target>








  <target name="-generate.jsp">

      <touch file="${generator.jsp.contents.dir}/${filePath}" mkdirs="true"/>  

      <lastIndexOf text="${filePath}" search=".jsp" property="extension"/>
      <lastIndexOf text="${filePath}" search="/" property="lastSlash"/>
      <substring text="${filePath}" start="${lastSlash}" end="${extension}" property="temp"/>
      <substring text="${temp}" start="1" property="page.name"/>

      <echo>PAGE NAME : ${page.name}</echo>

      <indexOf text="${filePath}" search="/" property="slashBefore"/>
      <if>
            <equals arg1="${slashBefore}" arg2="${lastSlash}"/>
            <then>
            </then>
            <else>
                <substring text="${filePath}" start="0" end="${slashBefore}" property="module.name"/>
                <echo>MODULE NAME : ${module.name}</echo>
            </else>    
      </if>

        <condition property="module.is.defined">
            <isset property="module.name"/>
        </condition>                    

        <if>
            <istrue value="${module.is.defined}"/>
            <then>
                <var name="full.page.name" value="${module.name}/${page.name}"/>
                <var name="full.page.mapping" value="${module.name}/${page.name}"/>
                <var name="full.page.name.resources" value="${module.name}.${page.name}"/>
                <var name="module.mapping" value="${module.name}"/>
            </then>
            <else>
                <var name="full.page.name" value="${page.name}"/>
                <var name="full.page.mapping" value="${page.name}"/>
                <var name="full.page.name.resources" value="${page.name}"/>
                <var name="module.mapping" value=""/>
                <var name="module.name" value="${page.name}"/>         
            </else>
        </if>


        <var name="pagescript" value="${page.name}@TO_BE_REPLACED@"/>

        <capitalize string="${page.name}" to="page.Name"/>    
        <capitalize string="${module.name}" to="module.Name"/> 

        <var name="page.Controller" value="${page.Name}Controller"/>
        <var name="page.form" value="${page.name}Form"/>
        <var name="page.Form" value="${page.Name}Form"/>


        <echo>FULL PAGE NAME : ${full.page.name}</echo>
        <echo>FULL PAGE MAPPING : ${full.page.mapping}</echo>
        <echo>FULL PAGE NAME RESOURCES : ${full.page.name.resources}</echo>
        <echo>PAGE NAME (cap): ${page.Name}</echo>
        <echo>PAGE CONTROLLER (cap): ${page.Controller}</echo>
        <echo>PAGE FORM : ${page.form}</echo>
        <echo>PAGE FORM (cap): ${page.Form}</echo>
        <echo>MODULE NAME : ${module.name}</echo>
        <echo>MODULE NAME (cap): ${module.Name}</echo>
      




  </target>


  <target name="-generate.jspf">
      <touch file="${generator.jsp.contents.dir}/${filePath}" mkdirs="true"/>    

  </target>


  <target name="-generate.inner">
      <touch file="${generator.jsp.contents.dir}/${filePath}" mkdirs="true"/>    

  </target>


  <target name="-generate.js">
      <touch file="${generator.js.contents.dir}/${filePath}" mkdirs="true"/>    

  </target>
























</project>